<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.grape.supermarket.dao.DepotDao">

  <sql id="Base_Column_List">
    <!--
    @mbggenerated
    -->
    depot_id, shop_id, comm_id, amount, oper_id, create_time, version, threshold, state
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultType="com.grape.supermarket.entity.db.DepotEntity">
     select c.barcode,c.comm_name,ct.type_name,s.shop_name,
         d.depot_id,d.shop_id as shop_id,d.comm_id,d.amount,d.oper_id,d.create_time,d.version,d.threshold,d.state
         from commodity c,shop s,depot d,commodity_type ct
         where d.comm_id=c.comm_id and d.shop_id=s.shop_id and c.type_id = ct.type_id
          and depot_id = #{depotId,jdbcType=INTEGER}
    </select>
    <select id="selectByCondition" parameterType="com.grape.supermarket.entity.param.DepotParam" resultType="com.grape.supermarket.entity.db.DepotEntity">
        select c.barcode,c.comm_name,c.cost_price,ct.type_name,s.shop_name,
         d.depot_id,d.shop_id as shop_id,d.comm_id,d.amount,d.oper_id,d.create_time,d.version,d.threshold,d.state
         from commodity c,shop s,depot d,commodity_type ct
         where d.comm_id=c.comm_id and d.shop_id=s.shop_id and c.type_id = ct.type_id
        <if test="idRange != null">
            and d.shop_id in
            <foreach collection="idRange" open="(" close=")" separator="," item="id">
                #{id}
            </foreach>
        </if>
         <if test="barcode != null">
             and d.comm_id in (select comm_id from commodity where barcode like concat(concat('%',#{barcode,jdbcType=VARCHAR}),'%'))
         </if>
        <if test="commName != null">
            and d.comm_id in (select comm_id from commodity where comm_name like concat(concat('%',#{commName,jdbcType=VARCHAR}),'%'))
        </if>
        <if test="amount != null">
            and d.amount > 0
        </if>
        <if test="shop_id_str != null">
            and d.shop_id in (${shop_id_str})
        </if>
        <if test="shopId != null">
            and d.shop_id = #{shopId}
        </if>
        <if test="state != null">
            and d.state = #{state}
        </if>
        <if test="typeId != null">
            and ct.type_id =#{typeId}
        </if>
         order by s.shop_id,c.barcode
        <include refid="common.currency_tail" />
    </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
    @mbggenerated
    -->
    delete from depot
    where depot_id = #{depotId,jdbcType=INTEGER}
  </delete>
  <insert id="insertSelective" parameterType="com.grape.supermarket.entity.db.DepotEntity">
    <!--
    @mbggenerated
    -->
    insert into depot
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="commId != null">
        comm_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="operId != null">
        oper_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="threshold != null">
        threshold,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="shopId != null">
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="commId != null">
        #{commId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="operId != null">
        #{operId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="threshold != null">
        #{threshold,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.grape.supermarket.entity.db.DepotEntity">
    <!--
    @mbggenerated
    -->
    update depot
    <set>
      <if test="shopId != null">
        shop_id = #{shopId,jdbcType=INTEGER},
      </if>
      <if test="commId != null">
        comm_id = #{commId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="operId != null">
        oper_id = #{operId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER}+1,
      </if>
      <if test="threshold != null">
        threshold = #{threshold,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=TINYINT},
      </if>
    </set>
    where depot_id = #{depotId,jdbcType=INTEGER} and version = #{version,jdbcType=INTEGER}
  </update>
    <select id="selectByShopIdAanCommId" parameterType="com.grape.supermarket.entity.db.DepotEntity" resultType="com.grape.supermarket.entity.db.DepotEntity">
        select
        <include refid="Base_Column_List" />
        from depot
        where shop_id = #{shopId,jdbcType=INTEGER} AND comm_id = #{commId,jdbcType=INTEGER}
    </select>
    <select id="countDepotByCondition" parameterType="com.grape.supermarket.entity.param.DepotParam" resultType="java.lang.Integer">
        select count(d.depot_id)
        from commodity c,shop s,depot d,commodity_type ct
        where d.comm_id=c.comm_id and d.shop_id=s.shop_id and c.type_id = ct.type_id
        <if test="idRange != null">
            and d.shop_id in
            <foreach collection="idRange" open="(" close=")" separator="," item="id">
                #{id}
            </foreach>
        </if>
        <if test="barcode != null">
            and d.comm_id in (select comm_id from commodity where barcode like concat(concat('%',#{barcode,jdbcType=VARCHAR}),'%'))
        </if>
        <if test="commName != null">
            and d.comm_id in (select comm_id from commodity where comm_name like concat(concat('%',#{commName,jdbcType=VARCHAR}),'%'))
        </if>
        <if test="amount != null">
            and d.amount > 0
        </if>
        <if test="shop_id_str != null">
            and d.shop_id in (${shop_id_str})
        </if>
        <if test="shopId != null">
            and d.shop_id = #{shopId}
        </if>
        <if test="state != null">
            and d.state = #{state}
        </if>
    </select>
    <update id="reduceCommodity">
        update depot
        set amount = amount - 1,version = version + 1
        where shop_id = #{shopId} and comm_id = #{commId}
    </update>
    <select id="selectAlarmDepot" resultType="com.grape.supermarket.entity.db.DepotEntity">
        select
          <include refid="Base_Column_List"/>
        from depot
        where state = 0 and threshold <![CDATA[ <> ]]> -1 and amount <![CDATA[ <= ]]> threshold
    </select>
    <!-- 微信端根据站点查询销售商品信息 -->
    <select id="selectDepotByWeChat" resultType="com.grape.supermarket.entity.db.DepotEntity" parameterType="com.grape.supermarket.entity.param.DepotParam">
        select d.* from depot d,commodity c,commodity_type ct where d.comm_id=c.comm_id and c.type_id=ct.type_id
        <if test="shopId != null">
            and d.shop_id = #{shopId}
        </if>
        <if test="notTypeIds != null">
            and ct.type_id not in (${notTypeIds})
        </if>
        <if test="typeId != null">
            and ct.type_id = #{typeId}
        </if>
        <if test="commName != null">
            and c.comm_name like '%${commName}%'
        </if>
        <include refid="common.currency_tail" />
    </select>
</mapper>